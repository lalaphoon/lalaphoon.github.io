[{"title":"Delivery - A Web Application","date":"2020-04-14T21:54:37.000Z","path":"2020/04/14/delivery/","text":"Front End Designed and developed an interactive web page for users to search a nearby delivery dispatcher and allocate a delivery path with React JS and Redux. Implemented features such as “Set up from location”, “Set up destination”, “Selected a delivery route” with Ant Design, GeoCoding API and Google Map API. Visualized the delivery route, including route distance, total time estimation.Utilized: React &amp; Redux, Ant Design Back End Designed five Java Servlets with RESTful APIs to handle http requests, in order to achieve “Search history record”, “Check deliver availability”, “make a delivery order” functionality. Generated delivery routes and returned to front-end with Google Directions API. Build MySQL database onAmazon RDS to store users’ order history and ongoing order. Deployed to AWS EC2 and managed version control with Docker.Utilized: Java, RESTful API, Full Stack Development, MySQL, AWS IntroThis project’s mission is to help people deliver their objects as fast as possible by auto allocate android or drone delivery within San Francisco (884,363 ppl). The entire process is a door-to-door service that is all managed by autonomous driving drones and/or robots. The drone or robot will get to your place, collect your items and talk it to your destination. We believe that through our project, we can significantly reduce the time of entire process and costs from human source on delivering within a city every day Requirements Users should be able to register an account and our system should be able to store all history order records. After a customer sends a request, our system should be able to allocate a drone/android, based on the customer’s location for a customer’s service Once a delivery service is ordered, we should be able to notify the user (sender or receiver) to pic up the object; Save this record and let users give us a rate therefore we can analyze the service in the future. Front EndComponents Details Intro : User Login and Registration User-Profile: User can starts a new order or check his/her history order Main1: You can view 3 dispatchers around you through a map window. Set up your starting location and deliver locations, deliver weight. Main2: After your selections, there will be 2 (for now) routes generated by Google Direction API (from backend) to present. It is an interactive page that user can pick a single one route from the map component, while you make a selection, it’s also changing the page on the right side, then move on to next page. Main3: Present the final selection of user. Final: Order has been sent, order is ready. React Components Map Used third party api react-google-maps. Wrapped with GoogleMap. Use Marker (MapDistriStatMarker, MapUserMarker) to spot markers on map. Use Polyline (MapRoute) to draw lines. Geocoding API - In OrderDetails The Geocoding API is a service that provides geocoding and reverse geocoding of addresses. 123456789&#x2F;&#x2F;take the place id and return me lat lonGeocoder &#x3D; new google.maps.Geocoder();this.Geocoder.geocoder( &#123;placeId: place_id&#125;, results &#x3D; &#123; const marker &#x3D; &#123; lat: lng: &#125;;&#125;); Places - Used in SearchBar with AutoComplete Based on a given address (still typing), return a list of guessed location. 123456789101112service &#x3D; new google.maps.places.AutocompleteService();handleSearch &#x3D; (address) &#x3D;&gt; &#123; this.service.getPlacePredictions(&#123; input: address, bounds: BOUNDS&#125;, (value) &#x3D;&gt; &#123; this.setState( &#123; dataSource : !value ? [] : value.map(place &#x3D;&gt; (&#123; description: place.description, place_id: place.place_id, &#125;)) &#125;); &#125;);&#125; React-Reduxindex.js : store all reducers, export them as combined Reducers. distributionLocationReducer orderReducer routeInfoReducer distributionLocationReducer state: locations: []; stores a list of lat&amp;lng object action: set(locations[]) : reset the entire list Use Case: Used in Main1, once /availability is done, store all 3 dispatchers location locally. 1234567891011121314151617181920212223242526272829303132&#x2F;&#x2F;store data - in availability promisethis.setState(&#123; distributionStation: data ? data: []&#125;);&#x2F;&#x2F;Set upexport default connect( &#x2F;&#x2F;state (&#123;distributionLocationReducer, orderReducer&#125;) &#x3D;&gt; (&#123; locations: distributionLocationReducer.locations, markers: orderReducer.markers, &#x2F;&#x2F; read markers from order reducer??? &#125;), &#x2F;&#x2F;action (dispatch) &#x3D;&gt; (&#123; set(items)&#123; dispatch(&#123;&#39;type&#39; : &#39;set&#39;, &#39;newDistributionLocation&#39; : items&#125;) &#125;, &#125;))(Main1);&#x2F;&#x2F;reducersconst distributionLocationReducer &#x3D; (state &#x3D; [], action) &#x3D;&gt; &#123; if (action.type &#x3D;&#x3D;&#x3D; &#39;set&#39;) &#123; return &#123; locations: action.newDistributionLocation, &#125; &#125; return state;&#125;export default distributionLocationReducer; orderReducer states startingLoc : String destination: String weight: float deliverType: String orderID: String price: float distance: float usageTime: float markers: [] Action setStartLoc setDestination setWeight setBoth: for startingLoc, destination, weight setDistance setPrice setUsageTime setMarkers setDeliverType setOrderID Use case OrderRoute (Main2) Retrieve startingLoc, destination, weight Saved distance, price, usageTime, deliverType, order_id, OrderDetials (Main1) Retrieve startinglocation, destination, weight Set starting location, destination, markers(for dispatcher), weight routeInfoReducer state route_id : String route : [], a list of lat lng object action select: reset route_id, to tell me which one user has selected setRoute setRouteInfo: for both route_id and route Use Case MapRoute(Map) : once user selected a route, store the route info globally retrieve route_id set route_id and route spots details Back EndAyalysisTraffic Analysis User in the city 884,363 (1 M ) Estimated no more than 1M Daily Active User(DAU) For Registration and Login (MySQL) : Total number of request per person per day: 0.1 Average: 1 QPS Peak: 3 QPS Order Delivery Request (NoSQL): total number of request per person per day: 50 Order: 0.5 QPS Peak: 1.5 QPS (total 3 QPS for read and write) Summary: MySQL AWS Aurora is scalable; multi-master; if it’s 15k, Aurora won’t be useful Storage Estimation Request for an order QPD: 50M in half year: 50M * 30 Days * 6 months = 9000M = 9 Billion in one year: 18 Billion Assume each stored object is approximately 500 bytes in half year: 9 billion * 500 bytes = 4.5 TB in one year: 5TB Method 1: 热储存 in memory Expensive redis (disk - consistency) vs memcache (cache) high frequency Method 2: 冷储存 AWS s3 1tb cheap latency is high (user profile is not allowed this) read only Java ServletAllocate : “/allocate” ; Once the user choose two location on Main2, this call will be sent. Availability : “/availability”; Main1 will call this as long as the component is ready. History: “/history”; TBD, used to check user’s history order Login: “/login”; TBD Payment: “/payment”; Once user click the confirm button on Main3, this call will be sent Register: “/register”; TBD DB-Tables User Table : Store user personal information Dispatchers A, B, C : current availabel deliver info History Table : Store user’s history record Order Table : Store a single one user’s on going purcharse record Route Info Table : Store a series temporary available route for a deliver APIUser Managment - Login/Register, Check History Login12345678910POST /login&#123; \"username\" : \"\", \"password\" : \"\"&#125;response : &#123; \"user_id\" : \"1111\", \"token\" : \"xadfaewfwgsdf\"&#125; Register1234567891011POST /registerbody: &#123; \"useremail\" : \"\", \"password\" : \"\", \"username\" : \"\"&#125;response: &#123; \"user_id\" : \"1111\", \"token\" : \"dsfasdfwegssfw\"&#125; DB - User Table userid uuid - varchar Primary Key username varchar email varchar password varchar When user registers an account, user should give an user email and password to the backend, backend will save a new user record and generate UUID as Primary Key to the database, return the front-end as a response with userid as a Token When user logins an account, user sends useremail and password to backend, backend will check if there is an account that useremail == useremail &amp;&amp; password == password. If yes, return 200 with user id (as Token); if it’s not, then just report as user login failed 4xx. ExtraEven though this feature is not implemented but I still should say something more about it. Authentication vs AuthorizationAuthentication: Am I? Authorization: am I authrozied to do? Why do we need Authentication? Access control: user can only access data that are authorized to that user. Logging: record user specific activity for book keeping, statistics, etc. A process of Re-login Check User’s History Record Search history order for user_id (This is just for the test) 12345678910111213141516GET /history?user_id=1111response: &#123; &#123; \"drone_id\" : \"DR001\", \"user_id\" : \"1111\", \"time_start\" : \"2005-10-30 T 10:45 UTC\", \"price\" : 12, \"location_from\" : \"M4W1W3\", \"time_end\": \"2005-10-30 T 10:45 UTC\", \"order_id\": \"OR00001\", \"location_to\": \"M4W1W3\", \"total_weight\" : 13.5 &#125;, &#123; ... &#125;&#125; DB - Delivery History Table (Finished Order) order_id varchar Primary Key Unique Id user_id Foreign Key from User Table Should be existed in User table from_location varchar to_location varchar deliver_id Foreign Key from Deliver DB Which Robot/Drone took the order time_start timestamp when the order start time_end timestamp when the user received the order total_weight float price float route string StringfyJson Specific route - a list of lat, lng This is table for recording an order has been finished. So you can check the time_end and user-selected route. Order_id is not firsted generated in this api call -&gt; order_id is first generated here [NOT USING CURRENTLY] When User Make New Order Insert a new history record into History Database 12345678910POST /historybody: &#123; \"user_id\" : \"1111\", \"location_from\" : \"M3EW4R\", \"location_to\" : \"T7U7E8\", \"time_start\": \"test time\", \"time_end\" : \"test time\", \"total_weight\" : 34.7, \"price\" : 90.0&#125; Check Availability Check the locations of 3 delivery dispatchers and get the real-time data about amount of delivery drone or robot 123456789101112131415161718192021222324252627GET /availabilityresponse:[ &#123; \"station_id\" : \"A\", \"station_name\" : \"Sunset Recreation Center\", \"lat\" : 37.7571, \"lon\": -122.4866, \"drone\" : 3, \"robot\" : 15, &#125;,&#123; \"station_id\" : \"B\", \"station_name\" : \"St Mary's Square\", \"lat\" : 37.7920, \"lon\" : -122.4052, \"drone\" : 4, \"robot\" : 2 &#125;,&#123; \"station_id\" : \"C\", \"station_name\" : \"Holly Park\", \"lat\" : 37.4414, \"lng\" : -122.2515, \"drone\" : 5, \"robot\" : 6 &#125;] DB - Deliver Table for Dispatcher A deliver_id varchar Primary Key type varchar {“DRONE”, “ANDROID”} states varchar {delivering, available} There is also table B, C This is used to check availability - count how many available Drone or Android User’s Request Make a request order 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576POST /allocatebody: &#123; \"user_id\" : \"1111\", \"location_from\" : &#123; \"lat\" : 34.2342, \"lng\" : -122.33 &#125;, \"location_to\" : &#123; \"lat\" : 35.2342, \"lng\" : -123.35 &#125;, \"total_weight\" : 37.0&#125;response:&#123; \"order_id\" : \"xxxx\", \"markers\" : [&#123; \"marker_name\" : \"Starting\", \"location\" : &#123; \"lat\" : 37.777642, \"lng\" : -132.233 &#125; &#125;, &#123; \"marker_name\" : \"Destination\", \"location\" : &#123; \"lat\" : 37.777340, \"lng\" : -122.410350 &#125; &#125;], \"routes\" : [ &#123; \"route_id\" : \"RT_SASjsdf23j\", \"price\" : 98.6, \"route\" : [ &#123; \"lat\" : 37.7521, \"lng\" : -122.4866 &#125;, &#123; \"lat\" : 37.777630, \"lng\" : -122.496440 &#125;, &#123; \"lat\" : 37.777340, \"lng\" : -122.410350 &#125;, &#123; \"lat\" : 37.792, \"lng\" : -122.4052 &#125; ], \"delivery_type\" : \"Drone\", \"available_time\" : \"2019-04-24 18:00:00\", \"usage_time\" : \"00:15:00\", \"distance\" : \"534.1\" &#125;, &#123; \"route_id\" : \"RT_lsjdf242ew\", \"price\" : 54.2, \"route\" : [ &#123; \"lat\" : 37.7521, \"lng\" : -122.4866 &#125;, &#123; \"lat\" : 37.777630, \"lng\" : -122.496440 &#125; ], \"delivery_type\" : \"Robot\", //\"available_time\" : \"2019-04-24 18:00:00\", \"usage_time\" : \"01:01:12\", \"distance\" : \"1534.1\" &#125; ]&#125; DB - Delivery Order Table (On-going Order) order_id varchar Primary Key First Created Here user_id Foreign Key From User Table from_location varchar to_location varchar deliver_id Foreign Key from Deliver DB Empty until user confirmed time_start timestamp Empty until user confirmed total_weight float price float Empty until user confirmed route string Encoded Polylines Empty until user confirmed DB - Route Table route_id varchar Primary Key order_id Foreign Key route Set of Strings Encoded Lat Lng type varchar “DRONE” / “ROBOT” price float Backend will receive from_location and to_location and use Google Direction API to generate a route (decoded string) illustrates a route between these two locations. A temporary order record is created here. But deliver_id, time_start, price, route will be empty as it is not determined yet. The available routes details will be saved into DB - Route Table first as a reference - to stores an estimated price - (yes, a route record after 15 days will be cleared out as it is not usaful)And at this time ==a deliver hasn’t been allocated as we not sure if user has made a strong decision that he would purchase our service.== Reply to Client : Unique Order_id for user to refer an order (to make it an confirmed), and available routes details. Payment User has confirmed the service 123456789101112POST /paymentbody: &#123; \"user_id\" : \"xxxx\", \"order_id\" : \"OR_1234\", \"route_id\" : \"RT_SASjsdf23j\"&#125;response: &#123; \"order_id\" : \"OR_1234\"&#125; Find route details by route_id, includes route, type, price from Route Table Based on the deliver type and location, allocate a deliver from A,B,C table, grab it by deliver_id, mark that deliver status to be delivering Re-insert route, deliver_id, price and take the current time as time_start into On-Going Order Table End User received the order, drone should get back 12345678910POST /endbody : &#123; \"order_id\" : \"OR_1234\" &#125;response: &#123; \"response\" : \"succeed\"&#125; It is the time that an order has been finished. Transfer an record with id “OR_1234” from On-Going Order Table to History Order Table. Take the current timestamp and recorded it as “time_end” Make sure free the current deliver such that deliver_id status is available now Conflicts React layers vs React Redux React Layers Pros: Easy to implement Cons: Hard to maintain Cons: Hard to send message over 3 parent-child relationships (Main2 vs Map Route ) React Redux Cons: Complexier to implement Pros: Easier to maintain Pros: Solve the problem of our issue - communicate between parents and children Map Logic : Who decide the logic of retrieved the route; Should the React (frontend) determine a certain route between two locations and sent to the backend? ==It was about how to design a communication between front end and backend, which way is more efficient== There is a Google Map API for backend about determine the route info, and data type can be a list of {lat, lon} We should consider Light UI vs Heavy Backend, backend should handle the logic When to Allocate a Drone? When user first time to make a wish or user has confirmed the order. Solution Pros Cons Solution A: allocate drone before payment (drone id is holded on Main 2) After user make a payment, the order will be ready for sure - guaranteed a service is available 1. If request is busy, could be none drone for user - easily be attacked if multiple users book a service but not paid2. What if the page on Main 2 is closed, we should do extra step to let the backend know that the drone can be released. But how to determine when exactly that user clicked the close button. Solution B: allocate drone after payment Solves the concerns of solution A Latency for user to wait for a deliver to response* *Drone is not available, delay, time might be longer than robot and still more expensive than robot.(Sol: merging request from other clients) AWS EC2 Docker : this is not an AWS service, but it’s a partner with EC2 RDS Feature of Cloud Pros: * Scalability: 1~2 server * Flexibility : EC2; VM; 根据数据类型储存不同的打他 * On-demand： 按需求chargeCons: Data safety and privacy ： 自己的东西在别人的server上 Cannot control downtime： 修server是别人的工作，自己很被动 EC2Amazon EC2 Elastic Compute Cloud (EC2) allows scalable deployment of applications by providing a Web service through which a user can boot an Amazon Machine Image to create a virtual machine, which Amazon calls an “instance”, containing any software desired. ==A user can create, launch and determine server instances as needed, paying for the hour for active servers, hence the term “elastic”==. EC2 is an Infrastructure as a service (iaas) : customer provide application , data, OS; Provider will determine the Virtualization, Servers, Storage, Networking. Steps: Choose a service EC2, launch an instance select an Amazon Machine Image (choose Ubuntu Server) choose free type of instance type When it’s on configuration page, set the port 80, 8080, 22 for 0.0.0.0/0 Make sure to generate a key pair Finailly, grab its public IP Connect it on terminal through public ip with the key pair DockerWhat is Docker? A platform for developers/sysadmins/etc to interact with Linux containers. Currently the most popular platform for handling Linux containers. 可以更快更敏捷的去部署应用程序。 Why Docker? Powerful &amp; Platform Agnostic Lightweight : 不再需要vm， 不再需要在vm 装os(前提是登陆上) Trending reference 隔离强： 该容器包含了应用程序的代码、运行环境、依赖库、配置文件等必需的资源。 容器之间达到进程级别的隔离，在容器中的操作，不会影响道宿主机和其他容器，这样就不会出现应用之间相互影响的情形！ 可移植性：自从用上docker容器后，可以实现开发、测试和生产环境的统一化和标准化。 轻量和高效： 和虚拟机相比，容器仅需要封装应用和应用需要的依赖文件，实现轻量的应用运行环境，且拥有比虚拟机更高的硬件资源利用率。 在微服务架构中，有些服务负载压力大，需要以集群部署，可能要部署几十台机器上，对于某些中小型公司来说，使用虚拟机，代价太大。 RDSMySQL : MySQL is an open-source relational database management system (RDBMS). MySQL Workbench : allows you to test your DB 1234use YOUR_DB_NAME;select * from history where user_id = 1111;select * from items;select * from categories; Amazon RDS: Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. Steps Click Security Group Create a Security Group Set up port 3306 for 0.0.0.0/0 Choose type MYSQL/Aurora Create MySQL DB Instance on RDS JDBC: JDBC (Java Database Connectivity) provides interfaces and classes for writing database operations. Technically speaking, JDBC is a standard API that defines how Java programs access database management systems. Since JDBC is a standard specification, one Java program that uses the JDBC API can connect to any database management system(DBMS), as long as a driver exists for that particular DBMS. SQL Syntax Syntax for DROP. 1DROP TABLE IF EXISTS table_name; Syntax for CREATE. 1CREATE TABLE table_name (column1 datatype, column2 datatype, ....); Syntax for INSERT. 1INSERT INTO table_name (column1, column2, column3, ...) VALUES (value1, value2, value3, ...); in Our case, TicketMaster is replaced by Google Direction API"},{"title":"How to Make a Stadium in Blender - 2 (Final)","date":"2019-08-02T15:22:03.000Z","path":"2019/08/02/How-to-Make-a-Stadium-in-Blender-II/","text":"Part 3Create a model for the bar Combine faces by pressing F Add my bar as a particle evenly to the face.How to do it: https://blender.stackexchange.com/questions/50695/emit-hair-particle-from-center-of-face/50697 The constraint is to make all face evenly (all face should has the same size, and same shape), then you can apply particle on face evenly. Part 4 - Final镂空墙壁 - https://jingyan.baidu.com/article/ed2a5d1f74aa9409f6be17dd.html Use the same technique to create another template - use number 0.95 for all last steps (ignore the number on the screenshot) Select the lines, E, Z to create a face along Z axis, give a depth. Apply Solidfy modifier to give thickness.Then combine two templates like this Better to make you model align to the same line - This below is not good. Create another cylinder that has even face around the stadium, then you can apply you new created network to the wall by using particle system My setting for the particle around the green wall is My wall instance’s frame is (Blue goes up)If your don’t satisfy the alignment issue, you will have this problem The complete is this below: greenllines are showing parent-child and group relationship.Parent and child has a line, all grouped objects will be labeled in green.Parent is looking good to organize in hierarchy chardGroup is some modification that you can do to a group of objects (see more details in Links for TuT) Used Bisect and select by vertices, it finally fixed as"},{"title":"How to Make a Stadium in Blender - 1","date":"2019-08-01T15:22:03.000Z","path":"2019/08/01/How-to-Make-a-Stadium-in-Blender-I/","text":"Part IThis is a step-by-step tut for makin a stadium like this: create a cylinder by shift+A, 3D model and choose cylinder Before you press enter, make sure select Cap Fill Type to be Nothing for this cylinder Subdivide Tool for adding more faces on the side of cylinder: in edit mode, press W and choose Subdivide Smooth surface - Shading - smooth Select the Cylinder , add a modifier -&gt; solidify , Change the value Thick (to whatever that makes sense), turn on Only Rim Make sure double sided the object press S for scale, press z on z origin to squeeze the cylinder. In Edit mode, select the sharp edge around the cylinder. Mesh -&gt; Edge -&gt; Bevel to make it a curve Then you can use proportion editing to change the shape https://www.youtube.com/watch?v=ToDeKHZ8TwU10. Make a tile on the roof Part IIMake top roof Select the edge of internal line Press E, S to extend the edge on the same level, just like to create another extended edge, but has a smaller size. Highlight the middle part Press P and choose selection - to slide the selected part as another unconnected object Better to make a copy of the new created top Select the all faces, press W and choose subdivision to increase the number of vertices Create an tile object Use particle system. choose type hair, advanced and emit from vert.Rotation is for rotate the entire instances, adjust it by phase. Then in Render, choose object and use the red cube object to fill it in. After you create a half side of your roof, use mirror tool to create the other side Notice that the other size, the rotation of each instance is different from what we have. If we change on of them, it will change the other side of roof. In this case, we need to break the mirror reference. The thing above doesn’t work for my case, but it’s good to know.My case is that the two object were using the same particle system.So we need to break the particle system on mirrored object. Convert particle as objects Select the object first, then …"},{"title":"Uncage Card Generator Summary","date":"2018-09-13T21:54:37.000Z","path":"2018/09/13/uncaged-cards-generator/","text":"uncaged-cards.com Designed and created the entire auto card generator system by using Photoshop Scripting to reduce the total working times and human efforts. Be able to produce gaming cards in both psd and jpg format. Generated 200+ cards within 15 mins which is 20 times faster than the traditional way. Leveraged Knowledge in JavaScript, OOD, Photoshop, Independent Project OverallUse several javascript to let photoshop execute an order to generate a few psd files. The process includes create a new doc, put image and text layers overlap to each other, crop the unused black border, translated it to an png or a psd file. Photoshop Scripting - javascriptReference A document object model (DOM) is an application programming interface (API), which allows you to programmaticlaly access various components of a document The photoshop DOM consists of a hierarchical representation of the Photoshop application. The Photoshop object model is a containment hierarchy, which means that objects in the model are identified partially by the objects that contain them. Application (DOM) - Photoshop, Illustrator - is the root of the Photoshop object model hierarchy; |Documents Collection |Document Objects - make modifications to the document image. - crop, rotate, flip the canvas ​ activeObject: property of parent object to set the active object front-most ​ |ArtLayers collection - Image contents​ |TextItem (Object)​ |HistoryStates collection - keep track changes made to the document​ |Layers collection​ |Layersets collection - zero or more art layers, an image is composed by multiple layers​ |Channels collection - store pixel information about image’s color Project Structure Image is composed by a set of layers. 12var docRef = app.documents.add(4,4) //4 inches, 4 inchesapp.activeDocument = docRef // set the current active doc is docRef Main+​——| CreateACard +———-| Helper: labels HEADER and DIR +——————–|InsertBGImage +——————–|InsertText +——————–|Utility +——————–|SmallIcon +——————–|CreateNewDoc +——————–|UncagedInfo Helper - split words with different font component1234567891011121314151617181920function splitToFonted(sentence) &#123; //P: punch //L: level change //K: kick //S: special //C: combo-breaker //D: Defence //G: submission var keywords = [\"L\", \"P\", \"c\", \"K\",\"S\", \"D\", \"G\"] var result; keywords.forEach(function(keyword) &#123; if(sentence.indexOf(keyword) &gt;= 0) &#123; var words = sentence.split(keyword); for(var i = 0; i &lt; words.length; i++) &#123; result.add(words[i]); result.add(keyword); &#125; &#125; &#125;)&#125; Question I Asked For DevelopmentHow to set multi fonts in one textItem? How can I get different fonts in textItem object? Can a script determine number of lines in a paragraph? Script with Magic Wand Problem I MetHow to merge a text with icon?Step1. Create a new font for the icons and import it into Photoshop. Step2. Think about how to merge text with different fonts. by looking at the problem “How can I get different fonts in textItem object” Action Manager code (as recorded by ScriptingListener.plugin) can be used to create type layers with different text properties like font for different letters. Step 3. In order to set up the text box width, just find the actived textitem after step 2 and set up the width in a general way. Some Cards Were Showing Weird Words + Layout Were WrongDue to some of cards written in excel were having multiples lines (Some item requires a single line, while it’s finished in 2 lines). So I wrote a Python script to help me calculate the total lines of each cards in csv format. Generally speaking, a card will have 7 lines, and if a card has 8 lines or 6 lines, I will need to take a look. Extra KnowledgeScripting Listener"},{"title":"iOS Tax Calculator App Summary","date":"2018-04-14T21:54:37.000Z","path":"2018/04/14/tax-calculator/","text":"github link TaxPro is an iOS mobile app that helps people to estimate their tax return based on user’s total income and location. There are a lot of topics leading to different formulas. User can either type the formula they are looking for or look at a group of formulas. iOS 9.2, worked with Xcode 7.2 in swift 4 Design Patterns: Strategy, Factory Method, Bridge, Singleton Core Data: saving and reloading a calculation record and user’s basic information. Storyboard + Autolayout + Code: to let the app fits in all size of screen. Charts: a third party API to draw a pie chart on output page PureLayout: a third party API to programmingticaly add autolayout constraint Social + MessageUI : created sharing functionality and sending email on user’s setting page. Expandable TableView: for user to pick the sub menu topics. it’s changeing the topic layout dynamically Ordered Dictionary + HashSet : to set up a priority for the range of income in each topic Experienced with Sketch to design User Interface. Design PatternStrategyFormula Formula description the whole procedure from collecting datas from user’s profile (total income, province etc.) to present the tax result based on tax topics. The whold precedure includes: BasicInputsViewController initUI(UIViewController)-&gt;UIView : based on the topic, present the topic title and collect data *”Interest Income”* form InterestIncome; *”Contribution”* for RRSP. checkBasicInput(): make sure user’s inputs are valid for above UI ProfileViewController setProfile(income, province): user’s input form for total income and location province ResultViewController getInstruction(): give an intruction for this topic getResult(): give actual digit in “$xx.xx” format retrieveData() : for saving a record, to retrieve all data in a key-value form getDefinition() : explain the topic. getTip(): give a tip on how to save more money Formula includes Tax Credit Deduction RRSP Income Employment OldAgeSecurityPension ForeignInvestmentIncome DividendIncome InterestIncome 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950classDiagram Formula &lt;|-- RRSP Formula &lt;|-- DividendIncome Formula : +UIView initUI(_ VC:UIViewController) Formula : +setProfile(_ income: Double, province: String) Formula : +Data retrieveData() Formula : +Double getResult() Formula : +String getTip() Formula : +String getDefinition() Formula : +String getInstruction() Formula : +Bool checkBasicInput() class RRSP&#123; +Double BasicPersonalAmount() &#x2F;&#x2F;ON, AB, BC, MB +String getInstruction() +String getDefinition() +Double getBasicReduction() &#x2F;&#x2F;ON, BC +Double getSingleReduction() &#x2F;&#x2F;ON, BC +Double getHealthPremium() &#x2F;&#x2F;ON +Double getProvincialCredit()&#x2F;&#x2F;BC, MB +Double getSingleProvincialCredit() &#x2F;&#x2F;BC,MB +UIView initUI() +setProfile() +Double getResult() +Data retrieveData() +String getTip() +String getDefinition() +String displayProcess() +Bool checkBasicInput() &#125; class DividendIncome &#123; +UIView init() +setProfile() +Double getResult() +Double BasicPersonalAmount()&#x2F;&#x2F;ON,AB,BC +Double getBasicReduction() &#x2F;&#x2F;ON,BC +Double getSingleReduction() &#x2F;&#x2F;ON,BC +Double getHealthPremium()&#x2F;&#x2F;ON +Double getProvincialCredit()&#x2F;&#x2F;BC +Double getSingleProvincialCredit()&#x2F;&#x2F;BC +Double foreignTaxCreditHelper() &#x2F;&#x2F;ALL +Double getForeignTaxCredit() &#x2F;&#x2F;ALL +operationBeforeGettingResult()&#x2F;&#x2F;ON,BC +String getInstruction() +Data retrieveData() +String getTip() +String getDefinition() +Bool checkBasicInput() &#125; 1234567891011121314151617181920212223242526272829303132333435class Calculator&#123; let strategy : Formula init (algorithm: Formula)&#123; self.strategy = algorithm &#125; func getResult() -&gt; Double&#123; return self.strategy.getResult() &#125; func getTip() -&gt; String&#123; return self.strategy.getTip() &#125; func getInstruction() -&gt; String&#123; return self.strategy.getInstruction() &#125; /* func displayProcess() -&gt; String&#123; return self.strategy.displayProcess() &#125;*/ func initUI(_ VC: UIViewController)-&gt;UIView&#123; return self.strategy.initUI(VC) &#125; func setProfile(_ income: Double, province: String)&#123; self.strategy.setProfile(income, province: province) &#125; func retrieveData() -&gt; ([String],[Double],[[String]])&#123; return self.strategy.retrieveData() &#125; func getDefinition() -&gt; String &#123; return self.strategy.getDefinition() &#125; func checkBasicInput() -&gt; Bool &#123; return self.strategy.checkBasicInput() &#125; &#125; in BasicInputsViewController or ProfileViewController 1var formula = Calculator(algorithm: RRSP.sharedInstance) BridgeIt’s similar to Strategy(dynamically, changed in run-time based on client’s behaviour), but there is difference. Bridge is a concrete implementation and static. 是两个类子对象之间互相拆分和互相重组。“桥接模式可替换抽象部分中的实现对象， 具体操作就和给成员变量赋新值一样简单。” Read More 12345classDiagram ProvincialTax &lt;|-- OntarioTax ProvincialTax &lt;|-- AlbertaTax Formula &lt;|-- RRSP Formula &lt;|-- DividendIncome When we calculate a result of a topic (RRSP), we actually find an implementation based on it’s province (a subclass of ProvincialTax) and we let all the logic written in the subclass of ProvincialTax. It’s the communication between those subclasses. ProvincialTax: is an interface of all basic steps for each province to calculate all formulas. For example, the object of ProvincialTax includes implementation of A,B,C. RRSP use A+B, and dividend income use B+C and so on. Each province has different parameters and procedures to implement A, B or C, so it’s better to create subclass for each province individually. And when meet a particular Formula, just use the instance of ProvincialTax to do the actual behaviour of calculation. 123456789101112131415func getResult() -&gt; Double &#123; var income = profileIncome var contribution = Double(self.contribution.text!) var vary = income! - contribution! var result :Double = 0.0 //-- HERE IS THE USE OF BRIDGE -- result = (CurrentProvince.getData(Location(rawValue: profileProvince)!)?.getRRSP(income!, contribution!).result)! //CurrentProvince is a static enumurator. pass in Location.Alberta will return us an alberta formula. //CurrentProvince.getData(Location(\"Alberta\")) -&gt; AlbertaTax() //result = AlbertaTax().getRRSP().result; return result &#125; Each func in ProvincialTax will take netIncome or other factor as inputsreturn: final result and it’s process in Pair [“text for description:”, “$xx.xx”] formatThe province includes Ontario Alberta British_Columbia Manitoba Saskatchewan Yukon New_Brunswick Nova_Scotia Northwest_Territories 1234567891011121314151617181920212223242526272829303132333435363738394041protocol ProvincialTax &#123; //in ProvincialTaxPro func getRRSP(_ netIncome: Double, _ contribution: Double ) -&gt; (result:Double, process: [[String]]) func getInterestIncome(_ netIncome: Double, _ interestIncome : Double) -&gt; (result:Double , process: [[String]]) func getOldAgePension(_ netIncome: Double, _ OASPension: Double, _ OASClawback: Double) -&gt; (result: Double, process: [[String]]) func getForeignInvestmentIncome(_ netIncome: Double, foreignIncome: Double, foreignTaxPaid: Double, isUSStock: Bool) -&gt; (result:Double, process: [[String]]) func getDividendIncome(_ netIncome: Double, dividendIncome: Double, ForeignTaxPaid: Double, CanadianCorporation : Bool, StockMarket : Bool, isUSStock : Bool, dividF: Double, dividP: Double) -&gt; (result: Double, process: [[String]]) func getBasicReduction(_ A: Double , _ B: Double, _ special: Bool , _ di: Double ) -&gt; Double // func getHealthPremium(A: Double, _ B: Double) -&gt; Double func getProvincialCredit(_ A : Double, _ B: Double) -&gt; Double func getForeignTaxCredit(_ income: Double, _ foreignIncome: Double, _ Deduction_2012 : Double, _ Deduction_2011 : Double, _ FederalForeignTaxCredit: Double, _ ProvincialForeignTaxCredit: Double, _ mode: Location, _ extraDividend : Double ) -&gt; Double //func getDividendTaxCredit(netIncome : Double, dividendIncome : Double, mode: Location, CanadianCorporation : Bool, StockMarket : Bool) -&gt; Double&#125;enum CurrentProvince &#123; static func getData(_ province: Location) -&gt; ProvincialTax? &#123; switch province &#123; case .Ontario : return OntarioTax() case .Alberta : return AlbertaTax() case .British_Columbia : return BritishColumbiaTax() case .Manitoba : return ManitobaTax() case .Saskatchewan : return SaskatchewanTax() case .Yukon : return YukonTax() case .New_Brunswick : return NewBrunswickTax() case .Nova_Scotia : return NovaScotiaTax() case .Northwest_Territories : return NorthwestTerritoriesTax() default: return nil &#125; &#125;&#125; 12345678910111213141516171819202122232425262728293031323334classDiagram ProvincialTax &lt;|-- OntarioTax ProvincialTax &lt;|-- Alberta ProvincialTax : +Pair getRRSP() ProvincialTax : +Pair getIntrerestIncome() ProvincialTax : +Pair getOldAgePersion() ProvincialTax : +Pair getForeignInvestmentIncome() ProvincialTax : +Pair getDividendIncome() ProvincialTax : +Double getBasicReduction() ProvincialTax : +Double getProvincialCredit() ProvincialTax : +Double getForeignTaxCredit() class OntarioTax &#123; -TaxPro TP &#x2F;&#x2F; helper func inlcudes getSurtax, fundation, get2Digits formatting -[String] interestThreshold +Pair getRRSP() +Pair getInterestIncome() +Pair getOldAgePension() +Pair getForeignInvestmentIncome() +Pair getDividendIncome() +Pair getForeignTaxCredit() +Double getBasicReduction() &#125; class Alberta &#123; -TaxPro TP -Location location &#x3D; Location.Alberta +Pair getRRSP() +Pair getInterestIncome() +Pair getOldAgePension() +Pair getForeignInvestmentIncome() +Pair getDividendIncome() +Double getForeignTaxCredit() +Double getBasicReduction() +Double getProvincialCredit() &#125; SingletonEach formular is a singleton. in Tax Credit.swift 1234//Adoption_Tax_Creditstatic let sharedInstance = Adoption_Tax_Credit()//Pension_Tax_Creditstatic let sharedInstance = Pension_Tax_Credit() Core DataBefore all interactions12345import CoreData//Find the container inside the AppDelegatelet appDel: AppDelegate = UIApplication.sharedApplication().delegate as! AppDelegate//Create a context from this containerlet context: NSManagedObjectContext = appDel.managedObjectContext Create an entity and new User record12let entity = NSEntityDescription.entity(forEntityName: \"Users\", in: context)let newUser = NSManagedObject(entity: entity!, insertInto: context) Save properties123newUser.setValue(\"Shashikant\", forKey: \"username\")newUser.setValue(\"1234\", forKey: \"password\")newUser.setValue(\"1\", forKey: \"age\") Obtain the entity to insert a new record - Used in CoreDataSaver1var newObject = NSEntityDescription.insertNewObjectForEntityForName(\"entityName\", inManagedObjectContext: context) To add data to new object1newObject.setValue(value, forKey: \"attributeName\") To save the context12345do&#123; try context.save()&#125; catch &#123; print(\"ERROR: saving context to Moment\")&#125; Fetch request1234567891011121314151617let request = NSFetchRequest(entityName: \"entityName\")request.predicate = NSPredicate(formate: \"predicateString\", argForPredicate)request.returnsObjectsAsFaults = false//NOTE: if you just want to outline of the request, do request.returnsObjectsAsFaults = truedo &#123;let results = try context.executeFetchRequest(request) if result.count &gt; 0 &#123; for result in results as! [NSManagedObject] &#123; if let username = result.valueForKey(\"username\") as? String&#123; print(username) &#125; &#125; &#125;&#125; catch &#123; print(\"ERROR: fetching failed\")&#125; Operations On ResultDELETE : context.deleteObject(result)GET VALUE : result.valueForKey(“attributeName”)SET VALUE : result.setValue(value, forKey: “attributeName”)CAST VALUE TO KNOWN DATATYPE :if let value = result.valueForKey(“attributeName”) as? Datatype { code} Predicate String12let request = NSFetchRequest(entityName: \"Users\")request.predicate = NSPredicate(format: \"username = %@\", \"Tommy\") RelationshipSuppose : many to many relationship with person entity and address entity Create a relationship: create the setnewPerson.setValue(NSSet(obejct: newAddress), forKey: “addresses”) save the newPerson context do {try newPerson.managedObjectContext?.save() } catch {errorHandling } NOTE: the Core Data creates the inverse relationship for usNOTE: the above save newPerson, newAddress and the relationship Update a relationship: create an address as above set the value of the new address as above add to the relationshiplet addresses = newPerson.mutableSetValueForKey(“addresses”)addresses.addObject(otherAddress) Delete a relationship:newPerson.setValue(nil, forKey: “addresses”) NOTE: for one to one, you can simply do newPerson.setValue(item, forKey: “oneToOneRelationship”) reference: https://medium.com/xcblog/core-data-with-swift-4-for-beginners-1fc067cca707 In App1234567891011121314151617181920212223242526classDiagram class User &#123; +String firstName +String lastName +String province +NSNumber income +String maritalStatus &#125; class TableCellData &#123; +String? first +String? forth +String? second +String? third +Record? record &#125; class Record &#123; +String? descrip +String? help +String? title +NSOrderedSet? tableData +NSOrderedSet? values &#125; class Value &#123; +String key +Double value &#125; Find all relationship in TaxCalculator.xcdatamodeld UserUser is an entity, a type of NSManagedObject. it’s core data properties 1234567891011import Foundationimport CoreDataextension User&#123; @NSManaged internal var firstname: String @NSManaged internal var lastname: String @NSManaged internal var province: String @NSManaged internal var income: NSNumber @NSManaged internal var maritalstatus: String&#125; it has a default constructor 123 override init(entity: NSEntityDescription, insertInto context: NSManagedObjectContext?) &#123; super.init(entity: entity, insertInto: context)&#125; it also has a self defined constructor 12345678910111213141516171819init?(firstname: String, lastname: String, province: String, income: Double, marital: String)&#123; let appDel: AppDelegate = UIApplication.shared.delegate as! AppDelegate let context: NSManagedObjectContext = appDel.managedObjectContext let entity = NSEntityDescription.entity(forEntityName: \"User\", in: context) if let entity = entity &#123; super.init(entity: entity, insertInto: context) setFirstname(firstname) setLastname(lastname) setProvince(province) setIncome(income) setMaritalStatus(marital) print(\"Saving a user is done\") &#125;else &#123; super.init() print(\"Error:entity not found for User\") return nil &#125;&#125; The setter is for it’s file properties 123456789101112131415fileprivate func setProvince(_ province: String)&#123; self.province = province &#125;fileprivate func setFirstname(_ first: String)&#123; self.firstname = first &#125;fileprivate func setLastname(_ last: String)&#123; self.lastname = last &#125;fileprivate func setMaritalStatus(_ m: String)&#123; self.maritalstatus = m &#125;fileprivate func setIncome(_ income : Double)&#123; self.income = NSNumber(value: income as Double) &#125; There is also a list of getter 123456789101112131415func getIncome() -&gt; Double &#123; return Double(self.income)&#125;func getFirstname() -&gt; String&#123; return self.firstname&#125;func getLastname() -&gt; String &#123; return self.lastname&#125;func getProvince() -&gt; String&#123; return self.province&#125;func getMaritalStatus() -&gt; String&#123; return self.maritalstatus&#125; Save and delete 12345678910111213141516171819202122func save()&#123; if let context = self.managedObjectContext &#123; do &#123; try context.save() &#125; catch &#123; print(\"ERROR: fail to save a user\") &#125; &#125;&#125;func delete() -&gt; Bool &#123; if let context = self.managedObjectContext &#123; context.delete(self) do &#123; try context.save() return true &#125; catch &#123; print(\"ERROR: fail to delete a user\") &#125; &#125; return false&#125; CoreDataSaver - Save a user 12345678910111213141516static func save_a_user_withUser(_ user: User)&#123; let appDel: AppDelegate = UIApplication.shared.delegate as! AppDelegate let context : NSManagedObjectContext = appDel.managedObjectContext let newUser = NSEntityDescription.insertNewObject(forEntityName: \"User\", into: context) newUser.setValue(user.firstname, forKey:\"firstname\") newUser.setValue(user.lastname, forKey:\"lastname\" ) newUser.setValue(user.province, forKey: \"province\") newUser.setValue(user.maritalstatus, forKey: \"maritalstatus\") newUser.setValue(user.income,forKey: \"income\") do&#123; try context.save() &#125; catch &#123; print(\"Saving a user occurs an error, with user func\") &#125; &#125; CoreDataFetcher - Fetch a user 12345678910111213141516static func fetch_a_user() -&gt; [User]&#123; //let defaultFetchSize = 1 let appDel: AppDelegate = UIApplication.shared.delegate as! AppDelegate let context : NSManagedObjectContext = appDel.managedObjectContext let request = NSFetchRequest&lt;NSFetchRequestResult&gt;(entityName: \"User\") //request.predicate = NSPredicate() request.returnsObjectsAsFaults = false // request.fetchLimit = defaultFetchSize do&#123; let results = try context.fetch(request) as! [User] //print(results[0].getLastname()) return results &#125; catch &#123; fatalError(\"Fetch Failed\") &#125; &#125; Record12345678classDiagram class Record &#123; +String? descrip +String? help +String? title +NSOrderedSet? tableData +NSOrderedSet? values &#125; title: the name of the formula topic descrip : the instruction of the topic help : it is the tip from the formula. tableData: it’s a table view inside the record page - this refers another entity values: the two basic factors for the pie chart. (Your input vs your output) When save a record, we create tableCellData and Values pair to save it together with Record. 1234567891011121314151617181920212223242526272829303132333435363738//ResultViewController.swift func save()&#123; //navigationItem.rightBarButtonItem?.title = \"saved\" navigationItem.rightBarButtonItem = UIBarButtonItem(title: \"Saved\", style: UIBarButtonItemStyle.plain, target: self, action: #selector(ResultViewController.save)) navigationItem.rightBarButtonItem?.isEnabled = false var xValues : [String] var yValues : [Double] var tableData : [[String]] (xValues,yValues,tableData) = formula.retrieveData() //Record Object var r : Record = Record(title: \"A Title...\" , descrip: formula.getDefinition(), helpInstruction: formula.getTip())! //Values for the pie chart var v = [Value]() for index in 0..&lt;xValues.count &#123; let iv : Value = Value(key: xValues[index], value: yValues[index])! v.append(iv) &#125; //Table cell data var td = [TableCellData]() for index in 0..&lt;tableData.count &#123; let itd : TableCellData = TableCellData(first: tableData[index][0], second: tableData[index][1], third: tableData[index][2], forth: tableData[index][3])! td.append(itd) &#125; //Attach Values and TableCellData to the Record r.attachTableDataSet(td) r.attachValueSet(v) //Save the Record r.save() &#125; TableCellData12345678910111213[[\"Net Income\", \"\", \"\", \"1234\"], [\"Province/Territory\", \"\", \"\", \"Ontario\"], [\"Interest\", \"\", \"\", \"234\"], [\"Federal Tax\", \"\", \"\", \"35\"], [\"Basic Personal Amount\", \"Federal\", \"\", \"-35\"], [\"Province/Territorial Tax\", \"\", \"\", \"12\"], [\"Basic Personal Amount\", \"Ontario\", \"\", \"-12\"], [\"Basic Reduction\", \"Ontario\", \"\", \"0\"], [\"Health Premium\", \"Ontario\", \"\", \"0\"], [\"Surtax\", \"%\", \"Threshold\", \"\"], [\"\", \"20%\", \"73145\", \"0\"], [\"\", \"36%\", \"86176\", \"0\"], [\"Tax Payable\", \"\", \"\", \"0\"]] ChartsChartsgithub link: link This is the pie chart that I used for ProcessViewController PieChartView 123456789101112131415161718let pieChartDataSet = PieChartDataSet(values: dataEntries, label: \"\")let pieChartData = PieChartData( dataSet: pieChartDataSet)pieChartDataSet.sliceSpace = 2.0pieChartDataSet.colors = ChartColorTemplates.colorful()pieChartDataSet.colors = colorspieChart.chartDescription?.text = \"\"pieChart.chartDescription?.textAlign = .centerpieChart.chartDescription?.font = UIFont(name: HEADERFONT, size: 18)!pieChart.chartDescription?.xOffset = 100.0pieChart.chartDescription?.yOffset = 0.0//pieChart.setDescriptionTextPosition(x: 100.0, y: 0.0)// pieChart.highlightPerTapEnabled = false//This below is used to save a piechart//pieChart.saveToCameraRoll()pieChart.data = pieChartData PureLayoutWas used for the animated search bar on HomeViewController - (installed with Cocoapods) to create auto layout constraints. PureLayout supports all Auto Layout features including inequalities, priorities, layout margins, identifiers, and much more. It’s a comprehensive, developer-friendly way to use Auto Layout. Reference link github link First set up searchBar: UISearchBar, searchButton: UIButton, resultTable:UITableview on MainView, give autolayout constraint for their correct position 123456789101112131415161718192021override func updateConstraints() &#123; if !didSetupConstraints &#123; searchBar.autoAlignAxisToSuperviewAxis(.Vertical) searchBar.autoMatchDimension(.Width, toDimension: .Width, ofView: self) searchBar.autoPinEdgeToSuperviewEdge(.Top) searchButton.autoSetDimension(.Height, toSize: searchButtonHeight) searchButton.autoSetDimension(.Width, toSize: searchButtonWidth) searchButton.autoCenterInSuperview() resultsTable.autoAlignAxisToSuperviewAxis(.Vertical) resultsTable.autoPinEdgeToSuperviewEdge(.Leading) resultsTable.autoPinEdgeToSuperviewEdge(.Trailing) resultsTable.autoPinEdgeToSuperviewEdge(.Bottom) resultsTable.autoPinEdge(.Top, toEdge: .Bottom, ofView: searchBar) didSetupConstraints = true &#125; super.updateConstraints()&#125; Attach MainView to the ViewController, right now there is only searchButton 1234567891011override func updateViewConstraints() &#123; if !didSetupConstraints &#123; mainView.autoPinToTopLayoutGuideOfViewController(self, withInset: 0) mainView.autoPinToBottomLayoutGuideOfViewController(self, withInset: 0) mainView.autoPinEdgeToSuperviewEdge(.Leading) mainView.autoPinEdgeToSuperviewEdge(.Trailing) didSetupConstraints = true &#125; super.updateViewConstraints()&#125; Added searchClick to the searchButton to show the rest content. (please see the reference link for the rest :)) The other use of PureLayout was on EmptyBackgroundView. which was set up as background view such that if there is no result showing on search bar, we then present this view. reference link Social + MessageUIReference Social is for share info on your Facebook, Twitter or in-message Here is a code from SettingsTableViewController 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859//Reference: sharing.......func showAlertMessage(_ message: String!) &#123; let alertController = UIAlertController(title: \"Accounts\", message: message, preferredStyle: UIAlertControllerStyle.alert) alertController.addAction(UIAlertAction(title: \"OK\", style: UIAlertActionStyle.default, handler: nil)) present(alertController, animated: true, completion: nil)&#125;func sharing() &#123; let actionSheet = UIAlertController(title: \"\", message: \"Share TaxPro to your friends!\", preferredStyle: UIAlertControllerStyle.actionSheet) // Configure a new action for sharing the note in Twitter. let tweetAction = UIAlertAction(title: \"Share on Twitter\", style: UIAlertActionStyle.default) &#123; (action) -&gt; Void in if SLComposeViewController.isAvailable(forServiceType: SLServiceTypeTwitter)&#123; let twitterComposeVC = SLComposeViewController(forServiceType: SLServiceTypeTwitter) twitterComposeVC?.setInitialText(self.sharingTitle) twitterComposeVC?.add(self.sharingImage) twitterComposeVC?.add(self.sharingURL) self.present(twitterComposeVC!, animated: true, completion: nil) &#125; else &#123; self.showAlertMessage(\"You are not logged in to your Twitter account\") &#125; &#125; // Configure a new action to share on Facebook. let facebookPostAction = UIAlertAction(title: \"Share on Facebook\", style: UIAlertActionStyle.default) &#123; (action) -&gt; Void in if SLComposeViewController.isAvailable(forServiceType: SLServiceTypeFacebook)&#123; let facebookComposeVC = SLComposeViewController(forServiceType: SLServiceTypeFacebook) // facebookComposeVC.setEditing(true, animated: true) facebookComposeVC?.setInitialText(self.sharingTitle) facebookComposeVC?.add(self.sharingImage) facebookComposeVC?.add(self.sharingURL) self.present(facebookComposeVC!, animated: true, completion: nil) &#125; else &#123; self.showAlertMessage(\"You are not connected to your Facebook account.\") &#125; &#125; // Configure a new action to show the UIActivityViewController let moreAction = UIAlertAction(title: \"More\", style: UIAlertActionStyle.default) &#123; (action) -&gt; Void in //第一个参数是一个数组，里面包含了我们想要发送的内容 //具体来说，如果我们只有一张图片，那么就不会显示「Add to reading list」!!! //Attach link here! let activityViewController = UIActivityViewController(activityItems: [\"Share this app to your friends\"], applicationActivities: nil) //activityViewController.excludedActivityTypes = [UIActivityTypeMail] self.present(activityViewController, animated: true, completion: nil) &#125; let dismissAction = UIAlertAction(title: \"Close\", style: UIAlertActionStyle.cancel) &#123; (action) -&gt; Void in &#125; actionSheet.addAction(tweetAction) actionSheet.addAction(facebookPostAction) actionSheet.addAction(moreAction) actionSheet.addAction(dismissAction) present(actionSheet, animated: true, completion: nil)&#125; MessageUI : is for sending message via mail service on the phone. Should attach MFMailComposeViewControllerDelegate on the view Controller 1234567891011121314151617181920212223242526272829303132333435363738394041424344//=======================Sending Message============================= func sendEmail()&#123; print(\"Sending an email...\") print(self.messageBody) let mailComposeViewController = configuredMailComposeViewController() if MFMailComposeViewController.canSendMail()&#123; self.present(mailComposeViewController, animated: true, completion: nil) &#125; else &#123; self.showSendMailErrorAlert() &#125; &#125; func configuredMailComposeViewController() -&gt; MFMailComposeViewController &#123; let mailComposerVC = MFMailComposeViewController() mailComposerVC.mailComposeDelegate = self mailComposerVC.setToRecipients([\"lalaphoon@gmail.com\", \"will@wtctax.ca\"]) mailComposerVC.setSubject(self.messageTitle) mailComposerVC.setMessageBody(self.messageBody, isHTML: false) return mailComposerVC &#125; func showSendMailErrorAlert()&#123; let sendMailErrorAlert = UIAlertController(title: \"Could Not Send Email\", message: \"Your device could not send e-mail. Please check e-mail configuration and try again.\", preferredStyle: UIAlertControllerStyle.alert) &#125; func sendAlert(_ alertTitle : String, alertMessage : String)&#123; let alert = UIAlertController(title: alertTitle, message: alertMessage, preferredStyle: .alert) alert.addAction(UIAlertAction(title: \"OK\", style: UIAlertActionStyle.default, handler: nil)) self.present(alert, animated: true, completion: nil) &#125; func mailComposeController(_ controller: MFMailComposeViewController, didFinishWith result: MFMailComposeResult, error: Error?) &#123; self.dismiss(animated: true, completion: nil) switch result.rawValue &#123; case MFMailComposeResult.cancelled.rawValue: print(\"Cancelled mail\") sendAlert(\"Sending Cancelled\", alertMessage: \"You have cancelled sending your email!\") case MFMailComposeResult.sent.rawValue: print(\"Mail Sent\") sendAlert(\"Mail Sent\", alertMessage: \"Your email has been sent to us!\\n Thank you very much!\") case MFMailComposeResult.saved.rawValue: print(\"You saved a draft of this email\") break; default: break &#125; &#125; Expandable TableViewReference It’s the tableview to allow cell expands and collapse - showing or hiding the information - to display on-demand informations to users. *”With them, ==it’s not necessary to create new view controllers== just to ask users for data that in any case should exist in one, default view controller. For example, with expandable cells you can show and hide options of a form that collects data without having to leave that view controller at all.”* I used the expandable tableview to present a relationship of topics in SubMenuViewController.swift Income - [Topic] Investment Income - [Subtopic] Sale of Publicly traded shares - [items] Sale of Mutual fund units Sale of bounds … Employment Employment Income Allowances Expense reimbursement Stock option … Interest Income Interest income from bank deposits Interest income from money loaned Interest income from bonds … Divided Income Dividend income from securities Dividend income business Dividend income (non-eligible only) … Deduction … TaxCredit … Procedure: Prepare a set of customized cell - NormalCell.xib, TextfieldCell.xib, DatePickerCell.xib. In our case we only use NormalCell.xib, and make sure my table view recognize those tablecells and be able to reuse them 1tblExpandable.register(UINib(nibName: \"NormalCell\", bundle: nil), forCellReuseIdentifier: \"idCellNormal\") Wrote other tableview delegates Get the CellDescriptor done prepared. it’s dynamically changed in our case. It will reload a new list as long as user switch to a new topic. The format of the cellDescriptor should be like this Root ​ -Item 0 //For section 1 ​ -Item 0 //for the actual cell ​ -isExpandable: Boolean to descript if this cell is expandable ​ -isExpanded: Boolean : is this cell has been expanded ​ -isVisible: Boolean when it’s parent is an expandable cell and expanded, turn on the visibility as a child ​ -value: String ​ -primaryTitle: String ​ -secondaryTitle: String ​ -cellIdentifier: String to let the tableviewcell know which xib you are using ​ -additionalRows: Number : if youare an expandable cell, you will have a value of greater than 0. Otherwise, 0 means you are the lowest child. 12345678910111213141516171819//This is the helper funcs that I used to insert table view cell's info. func addNormalCell(_ Title: String, _ child: Int, _ guy: NSMutableArray)&#123; guy.add([\"additionalRows\":child, \"cellIdentifier\":\"idCellNormal\", \"isExpandable\": true, \"isExpanded\": false, \"isVisible\": true, \"secondaryTitle\":Title, \"primaryTitle\":\"\", \"value\":\"\"]) &#125; func addValueCell(_ Title: String, _ guy: NSMutableArray)&#123; guy.add([\"additionalRows\":0, \"cellIdentifier\":\"idCellValuePicker\", \"isExpandable\": false, \"isExpanded\": false, \"isVisible\": false, \"secondaryTitle\":\"\", \"primaryTitle\":Title, \"value\":\"\"]) &#125; func addTopicGroupCell(_ what: [String]) -&gt; NSMutableArray&#123; let guy = NSMutableArray() addNormalCell(\"Topic\", what.count, guy) for i in what&#123; addValueCell(i, guy) &#125; return guy &#125; Set up logic for cell item clicked If the expandable Item cell was clicked for expanded the new items, inserts those items make sure to reset the expanded to be true in cellDescriptors call tableView.reloadData(); if the item cell clicked was not for expanded, it means it needs to pick a value: retrieve the text value on the UILabel Reset it to it’s parent’s primary value let the current cell(with it sibling) to be invisible And make sure let its parent not to be expanded anymore (since a value is picked already) tableView.reloadData(); For more info about how to dynamically load cell items info, please go check tableView(didSelectRowAt) in SubMenuViewController.swift Bug ReportHad error for dynamically inserting a new row into the CellDescript.plist I’m trying to add programmatically section and rows to the project. So what I do is to create another NSMutableArray and add this array to the cellDescriptors. Basically what I do for that; var myNewNSMutableArray = NSMutableArray() //create empty array //adding dictionaries to the NSMutableArraymyNewNSMutableArray.addObject([“additionalRows”: 2, “cellIdentifier”: “idCellNormal”, “isExpandable”: true , “isExpanded”: false , “isVisible”: true , “secondaryTitle”: “”, “primaryTitle”: “myTitle”, “value” : “”]) // Adding the array to cellDescriptorscellDescriptors.addObject( myNewNSMutableArray ) It does work great until I select the row to be expanded. The crash occurs at the following line;cellDescriptors[indexPath.section][indexOfTappedRow].setValue(shouldExpandAndShowSubRows, forKey: “isExpanded”) Where the error shows that the key “isExpanded” is not found;Error: this class is not key value coding-compliant for the key isExpanded Is there any way to work around this error without having to add manually all the row in the cellDescriptor.plist ? Here is my fix I figured out the solution, you have to switch NSMutableArray to be NSMutableDictionary and so it will do the setValue forKey things:code could be like this (where you pointed out for the error): 12345var array: NSMutableArray = cellDescriptors[indexPath.section].mutableCopy() as! NSMutableArrayvar test : NSMutableDictionary = cellDescriptors[indexPath.section][indexOfTappedRow].mutableCopy() as! NSMutableDictionarytest.setValue(shouldExpandAndShowSubRows, forKey: \"isExpanded\")array.replaceObjectAtIndex(indexOfTappedRow, withObject: test)cellDescriptors[indexPath.section] = array reference Ordered Dictionary + HashSetOrdered DictionaryReference 1 Reference 2 When I use it?I used it for split the range for bracket percentage - TaxPro.swift. What I wanted to do was to find a certain range of the total income so i can get the correct bracket percentage. By using this you don’t have to resort everytime, just compare them with an order by index, compare with the key value and get the actual value for the percentage 12345ProvincialBracketDict[Location.Ontario]?.insert(0.1316, forKey: 220000, atIndex: 0)ProvincialBracketDict[Location.Ontario]?.insert(0.1216, forKey: 150000, atIndex: 1)ProvincialBracketDict[Location.Ontario]?.insert(0.1116, forKey: 83075, atIndex: 2)ProvincialBracketDict[Location.Ontario]?.insert(0.0915, forKey: 41536, atIndex: 3)ProvincialBracketDict[Location.Ontario]?.insert(0.0505, forKey: 0, atIndex: 4)"},{"title":"iOS Moments Stories Summary","date":"2018-01-20T22:54:37.000Z","path":"2018/01/20/moments-stories/","text":"see it on github A diary taking tool for recording daily life in different media such as texts, photos, audios and videos. Each diary is able to set up background color, background music and stickers. All diaries are sorted in a calendar. Moments is an iOS mobile application that enables us to easily record and organize the many precious moments in our daily lives. It is designed to improve the process of diary writing where long paragraphs are replaced with photos, audios and video. FireBase: User signup and login. MediaPlayer, Photos: Insert text, images (from your library), stickers (image library we support), photos (use your camera), audio (recording sounds), background music, video (loaded from your local device library or recording a video) when you create a diary. Core Data: Saving and reloading a diary. CVCalendar: Monthly calendar view for organizing all diaries. AVFoundation: Generating a video using your images. UI Design Structure Design Final Report"},{"title":"A Small Town - OpenGL Project Summary","date":"2018-01-18T22:54:37.000Z","path":"2018/01/18/a-small-town/","text":"See it on Github Hi, this is the game that I created for CS488 Spring 2017 OpenGL C++ Final project to complete 10 objectives : Modelling the scene, UI, Particle System, Sound, Static Collision detection, Transparency, Reflection Map, Texture Mapping, Shadow Mapping (imperfect), Lens Flare. The game took me 1.5 weeks to plan and study, and another 1.5 weeks to actual implement it. The game was purely implemented by math including linear algebra, vector and matrices; And shaders in OpenGL C++. No extra game engine was used. Edited: And I got Honorable Mention for this project! Check Final Report Here is a video about it: Here are some fun screenshots: You can see your life situation in the life bar. The red colour means you are in dangerous! The greener bar indicating you are about to win. There are some images on my process of work.I was really frustrated when I got failed on texture mapping. And after fixed my texture mapping, I got this! I was really happy when it’s getting better!! Adding the third person camera and particle system. It’s really beautify when I apply multi-texture on plane. It was really starting from scratch. You can see the result of a plane with multi-texturing mapping on it, a textured model - earth and the skybox. Adding water plane with reflection map from skybox. I was trying to create a view after rain. You can see the road is filled with puddles from the rain. Skybox is used to implement the reflection map on water. You can see the result here. Water plane is another plane with blending map. Hopefully you can see the normal mapping here. and here. There were also a few obstacles stopped me. Skybox, by just changing a string for the image file name. It’s like I was lucky to use the only one correct group of images for the skybox. Shadow was there, but it’s gone after I added normal mapping for the earth. And it’s not a perfect shadow. That’s why I chose to add normal mapping to make up my failure on shadow. Some strange shadow here: There is a scene from bird view. Far plane was clipped behind the houses. You have to put your camera near to the ground to see the Lens flare. Or just go back to those houses. The reason is that I set up the light source (sun) is really close to the scene. So you can see lens flare when you have a longer distance from the sun. The final scene. Thank you very much for reading this. Hopefully, you would like this game."}]